head	1.1;
access;
symbols;
locks
	root:1.1; strict;
comment	@ * @;


1.1
date	2016.10.21.11.18.04;	author root;	state Exp;
branches;
next	;


desc
@if the codelenth is 2 
then here we apply biwise opration for 2 bit compression
@


1.1
log
@Initial revision
@
text
@#include"header.h"
#include"prototype.h"
int compression2(int fd1,char *ma)
{	
	int i,fd,j=0,sl;
	unsigned char ch,*fn,c,byt,a[]="compression2";
	sl=strlen(ma);
	fn=a;
	fd=(*fp4)(fn);
	lseek(fd1,0,SEEK_SET);
	while(1)
	{
		byt=byt^byt;
		read(fd1,&ch,1);
		if(ch==10)
			break;
		for(i=0;i<sl;i++)
		{
			if(ma[i]==ch)
			{
				j=i;
				break;
			}
		}
		sprintf(&c,"%c",j);	
		c=c<<6;
		byt=byt|c;
//		printf("byt1:=%d\n",byt);
		read(fd1,&ch,1);
		if(ch==10)
			break;
		for(i=0;i<sl;i++)
		{
			if(ma[i]==ch)
			{
				j=i;
				break;
			}
		}
		sprintf(&c,"%c",j);
		c=c<<6;
		c=c>>2;
		byt=byt|c;
//		printf("byt2:=%d\n",c);
		read(fd1,&ch,1);
		if(ch==10)
			break;
		for(i=0;i<sl;i++)
		{
			if(ma[i]==ch)
			{
				j=i;
				break;
			}
		}
		sprintf(&c,"%c",j);
		c=c<<6;
		c=c>>4;
		byt=byt|c;
		printf("byt3:=%d\n",byt);
		read(fd1,&ch,1);
		if(ch==10)
			break;
		for(i=0;i<sl;i++)
		{
			if(ma[i]==ch)
			{
				j=i;
				break;
			}
		}
		sprintf(&c,"%c",j);
		c=c<<6;
		c=c>>6;
		byt=byt|c;
//		printf("byt4:=%d\n",byt);
		(*fp8)(byt,fd);
	}
	return 0;
}
@
