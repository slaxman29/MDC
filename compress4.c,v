head	1.29;
access;
symbols;
locks; strict;
comment	@ * @;


1.29
date	2017.07.14.09.50.54;	author laxman29;	state Exp;
branches;
next	1.28;

1.28
date	2017.07.14.09.46.42;	author laxman29;	state Exp;
branches;
next	1.27;

1.27
date	2017.07.14.09.42.50;	author laxman29;	state Exp;
branches;
next	1.26;

1.26
date	2017.07.14.06.45.11;	author laxman29;	state Exp;
branches;
next	1.25;

1.25
date	2017.07.13.06.50.46;	author laxman29;	state Exp;
branches;
next	1.24;

1.24
date	2017.07.06.16.55.48;	author laxman29;	state Exp;
branches;
next	1.23;

1.23
date	2017.07.06.10.11.19;	author laxman29;	state Exp;
branches;
next	1.22;

1.22
date	2017.07.06.10.05.56;	author laxman29;	state Exp;
branches;
next	1.21;

1.21
date	2017.07.06.06.46.37;	author laxman29;	state Exp;
branches;
next	1.20;

1.20
date	2017.07.06.06.43.31;	author laxman29;	state Exp;
branches;
next	1.19;

1.19
date	2017.07.06.06.40.22;	author laxman29;	state Exp;
branches;
next	1.18;

1.18
date	2017.07.06.06.35.55;	author laxman29;	state Exp;
branches;
next	1.17;

1.17
date	2017.07.06.06.34.28;	author laxman29;	state Exp;
branches;
next	1.16;

1.16
date	2017.07.06.06.32.38;	author laxman29;	state Exp;
branches;
next	1.15;

1.15
date	2017.07.06.06.20.26;	author laxman29;	state Exp;
branches;
next	1.14;

1.14
date	2017.07.06.06.19.43;	author laxman29;	state Exp;
branches;
next	1.13;

1.13
date	2017.07.06.06.18.53;	author laxman29;	state Exp;
branches;
next	1.12;

1.12
date	2017.07.06.06.17.29;	author laxman29;	state Exp;
branches;
next	1.11;

1.11
date	2017.07.06.06.07.05;	author laxman29;	state Exp;
branches;
next	1.10;

1.10
date	2017.07.06.06.01.40;	author laxman29;	state Exp;
branches;
next	1.9;

1.9
date	2017.07.06.05.53.30;	author laxman29;	state Exp;
branches;
next	1.8;

1.8
date	2017.07.06.05.44.37;	author laxman29;	state Exp;
branches;
next	1.7;

1.7
date	2017.07.06.05.42.56;	author laxman29;	state Exp;
branches;
next	1.6;

1.6
date	2017.07.06.05.40.59;	author laxman29;	state Exp;
branches;
next	1.5;

1.5
date	2017.07.06.05.20.00;	author laxman29;	state Exp;
branches;
next	1.4;

1.4
date	2017.07.06.05.17.22;	author laxman29;	state Exp;
branches;
next	1.3;

1.3
date	2017.07.04.16.34.54;	author laxman29;	state Exp;
branches;
next	1.2;

1.2
date	2017.07.04.16.26.15;	author laxman29;	state Exp;
branches;
next	1.1;

1.1
date	2017.07.04.07.24.27;	author laxman29;	state Exp;
branches;
next	;


desc
@@


1.29
log
@se
.\
@
text
@#include"header.h"
#include"declaration.h"
int compress4(int fd ,char *ma)
{	
	unsigned char byt,c;
	char ch;
	int cfd,i,efd;
	cfd = openfile("O_WRONLY");
	efd = openfile("O_WRONLY"); 
	while(1)
	{
 	      	
		c^=c;
		byt^=byt;//xor operation 
		read(fd,&ch,1);
		printf("character is : %c\n",ch);
		if(ch==10)
		{
			break;
		}
		i=findindex(ch,ma);
		printf("index is:%d\n",i);
		c=(char)i;
		c<<=4;
		byt|=c;
		read (fd,&ch,1);
		printf("character is :%c\n",ch);
		if(ch==10)
		{
			byt|=0X0F;
			write(cfd,&byt,1);
			break;
		}
		i=findindex(ch,ma);
		printf("index is:%d\n",i);
		c=(char)i;
		c<<=4;
		c>>=4;
		byt=byt|c;
		write(cfd,&byt,1);
	

	}
	write(efd,ma,strlen(ma));
	close(cfd);
	close(efd);

	
}
@


1.28
log
@*** empty log message ***
@
text
@a40 1
		printf("%c\n",byt);
@


1.27
log
@*** empty log message ***
@
text
@d22 1
a22 1
		printf("%d\n",i);
d27 1
a27 1
		printf("character is :%c",ch);
d35 1
a35 1
		printf("index is:%d",i);
@


1.26
log
@*** empty log message ***
@
text
@a4 1
	printf("begin ch:==============\n");
d35 1
a35 1
		printf("%s:%dindex is:",__func__,i);
@


1.25
log
@completed the function by correcting all the errors
@
text
@d17 1
a17 1
		printf("ch: %c\n",ch);
a23 1
		//sprintf
d36 1
a36 2
		printf("%s:%d",__func__,i);
		//sprintf(&c,"%d",i);
@


1.24
log
@*** empty log message ***
@
text
@d6 3
a8 2
	char byt,ch,c;
	int cfd,i,efd,ret;
d15 2
a16 4
		byt^=byt;
		ret=read(fd,&ch,1);
		if (ch==10)
		break;
d18 18
d38 4
a41 4
		sprintf(&c,"%d",i);
		
		c=c<<4;
		c=c>>4;
d43 1
a43 1
		write(fd,&byt,1);
d49 2
a50 2
close(cfd);
close(efd);
@


1.23
log
@*** empty log message ***
@
text
@a17 2
		if(ret==0)
		break;
d31 1
@


1.22
log
@*** empty log message ***
@
text
@d8 2
a9 2
	cfd = openfile();
	efd = openfile(); 
@


1.21
log
@*** empty log message ***
@
text
@d8 2
a9 2
	cfd = openfilew();
	efd = openfilew(); 
@


1.20
log
@*** empty log message ***
@
text
@a14 1
		printf("ret: %d\n",ret);
a19 1
		printf("ret: %d\n",ret);
@


1.19
log
@*** empty log message ***
@
text
@d25 7
@


1.18
log
@*** empty log message ***
@
text
@a14 1
		ret = lseek(fd,0,SEEK_SET);
@


1.17
log
@,
@
text
@d18 2
@


1.16
log
@*** empty log message ***
@
text
@d8 2
a9 2
//	cfd = openfilew();
//	efd = openfilew(); 
@


1.15
log
@*** empty log message ***
@
text
@d5 1
a5 1
	printf("begin ch:==================================================================\n");
@


1.14
log
@*** empty log message ***
@
text
@d15 2
a16 1
		lseek(fd,0,SEEK_SET);
@


1.13
log
@*** empty log message ***
@
text
@d19 1
@


1.12
log
@*** empty log message ***
@
text
@d15 1
@


1.11
log
@*** empty log message ***
@
text
@d8 2
a9 2
	cfd = openfilew();
	efd = openfilew(); 
@


1.10
log
@*** empty log message ***
@
text
@d5 1
a5 1
	printf("begin ch:\n");
@


1.9
log
@*** empty log message ***
@
text
@d5 1
d18 1
a18 1
		printf("%c ch:\n",ch);
@


1.8
log
@se
.\
@
text
@d6 1
a6 1
	int cfd,i,efd;
d11 1
a11 2
 	      	if(ch==10)
		break;
d14 3
a16 3
		read(fd,&ch,1);
		//if(ch==10)
		//break;
@


1.7
log
@*** empty log message ***
@
text
@d19 2
a20 2
		//i=findindex(ch,ma);
		//printf("%s:%d",__func__,i);
@


1.6
log
@se
@
text
@d24 2
a25 1

@


1.5
log
@se
\.
@
text
@d19 2
a20 2
		i=findindex(ch,ma);
		printf("%s:%d",__func__,i);
@


1.4
log
@se
.\
@
text
@d11 2
d16 2
a17 2
		if(ch==10)
		break;
@


1.3
log
@*** empty log message ***
@
text
@d9 1
a9 1
	while (1)
d16 1
a16 1
		printf("%cch:\n",ch);
@


1.2
log
@created the compress4 function and called it
@
text
@d16 1
a16 1
		printf("%s:ch:%c\n",__func__,ch);
@


1.1
log
@Initial revision
@
text
@d4 21
a24 3
{
	printf("%s Begin of function",__func__);
	printf("%s End of function",__func__);
@
